Benchmarking https://github.com/michaeljclark/latypus#benchmarking
WRK2 Benchmarking https://github.com/ivanmejiarocha/micro-service
Testing with valgrind https://github.com/michaeljclark/latypus#testing-with-valgrind https://www.jetbrains.com/help/clion/memory-profiling-with-valgrind.html
perf https://perf.wiki.kernel.org/index.php/Main_Page https://www.jetbrains.com/help/clion/cpu-profiler.html
Analysing Hierarchies https://www.jetbrains.com/help/clion/analyzing-applications.html
Code inspection https://www.jetbrains.com/help/clion/code-inspection.html
Clang static analyzer https://github.com/ruslo/polly/wiki/Toolchain-list#analyze https://github.com/ruslo/polly/blob/master/analyze-cxx17.cmake
TODO: cmake styleguide https://0.readthedocs.io/en/latest/cmake.html
// TODO: freezes with big queue
// TODO:  webrtc::JsepTransportController::OnMessage
// TODO: task queue per thread
// TODO: measure memory
// TODO: USE boost/outcome https://github.com/mmha/gltfpp/blob/master/gltfpp/include/Error.h
// TODO: .clang-tidy https://github.com/mmha/gltfpp/blob/master/.clang-tidy
// TODO: CI https://github.com/mmha/gltfpp/blob/master/.travis.yml and [![Build Status](https://travis-ci.org/mmha/gltfpp.svg?branch=master)](https://travis-ci.org/mmha/gltfpp) http://www.brianlheim.com/2017/08/20/supercollider-travisci.html
// TODO: Doxyfile.in https://github.com/mmha/gltfpp/blob/master/Doxyfile.in
fuzzing test https://chromium.googlesource.com/chromium/src/testing/libfuzzer/+/HEAD/getting_started.md https://raw.githubusercontent.com/mmha/gltfpp/master/README.md
TODO: add helper scripts for clang-format && update in readme below
TODO: scripts to run gdb https://github.com/solarbro/devScripts/blob/76b2ca2db6094afb7931d644d73b821e1c5746ff/clangBuildScripts/runClang.py
TODO: scripts to run ctest N times in parallel https://github.com/ebroder/rugdby/blob/55b0d329d47876fa7102283e0b37eb5547efb0be/test/bin/run-tests.py
and READ!!!! https://a4z.bitbucket.io/blog/2018/05/17/Speed-up-your-test-cycles-with-CMake.html
TODO https://github.com/mozilla/rr
perf tests https://github.com/mozilla/moz2d/blob/master/tests/perf/TestBase.cpp
TODO https://github.com/abseil/abseil-cpp
MTuner
create https://github.com/getlantern/natty/blob/master/webrtc-setup script
https://github.com/Tencent/TscanCode
Docker https://habr.com/ru/post/414109/ https://github.com/Tencent/phxqueue/wiki/Quickstart-with-Docker
Docker on Windows https://habr.com/ru/post/358774/
OR VAGRANT https://github.com/rstudio/rstudio/wiki/Development-with-Vagrant
https://github.com/Tencent/paxosstore/blob/master/paxoskv/clean.sh
Jenkinsfile.macos https://github.com/rstudio/rstudio/blob/master/Jenkinsfile.macos https://schneide.blog/2017/12/11/integrating-catch2-with-cmake-and-jenkins/
TODO: rewrite scipts to python
CompileProtos.cmake https://github.com/GoogleCloudPlatform/google-cloud-cpp/blob/master/cmake/CompileProtos.cmake
CREATE_GRAPHVIZ https://github.com/GoogleCloudPlatform/google-cloud-cpp/blob/master/CONTRIBUTING.md
TODO: badges https://raw.githubusercontent.com/GoogleCloudPlatform/google-cloud-cpp/master/README.md
TODO: https://kristerw.blogspot.com/2018/06/useful-gcc-address-sanitizer-checks-not.html
TODO: https://kristerw.blogspot.com/2018/03/detecting-incorrect-c-stl-usage.html

## TODO

* Cusom STUN https://webrtc.googlesource.com/src/+/master/examples/stunserver/stunserver_main.cc
* Support android https://blog.piasy.com/2017/09/03/Use-WebRTC-Static-Library/
* Support ios
* Support win64
* Send a message each 33 or 60 ms with user input data.
* Use Protocol Buffers
* Use message queue
* Run the WebSocket server as a separate thread so main process can handle the game loop.
* If the game server is not behind a NAT and it has a static IP address, STUN and TURN are unnecessary. ICE has a concept of a host candidate (https://tools.ietf.org/html/rfc5245#section-4.1.1.1), which will create a direct connection between peers using the address in the candidate with no STUN or TURN servers in between.
* Video/Audio? https://blog.discordapp.com/how-discord-handles-two-and-half-million-concurrent-voice-users-using-webrtc-ce01c3187429 && https://www.jianshu.com/p/1de3bacf9d3c
* Support large messages https://developer.mozilla.org/en-US/docs/Web/API/WebRTC_API/Using_data_channels

## TODO
load balancer
CODESTYLE: noexcept, indent e.t.c
USE Catch2 https://github.com/catchorg/Catch2
USE https://ned14.github.io/outcome/ WATCH https://ned14.github.io/outcome/videos/
RVO2 Library: Reciprocal Collision Avoidance for Real-Time Multi-Agent Simulation & https://gamedev.stackexchange.com/a/136415/123895
iguana universal serialization engine https://github.com/qicosmos/iguana
picohttpparser
c++ html template engines: https://github.com/qicosmos/render https://github.com/melpon/ginger
ormpp Apache License, C++ ORM, C++17, support mysql, postgresql,sqlite https://github.com/qicosmos/ormpp/t
ODB https://www.codesynthesis.com/products/odb/ C++ Object-Relational Mapping (ORM) If the application that is based on ODB is only used internally within the organization, then it is unlikely to be a source of significant revenue while its utility is most likely limited to this organization. As a result, in this case, ODB can be used under the GPL without giving anything back. https://www.codesynthesis.com/products/odb/license.xhtml
SOCI https://github.com/SOCI/soci The C++ Database Access Library
LevelDB https://github.com/Tencent/paxosstore/blob/master/paxoskv/CMakeLists.txt#L21
rocksdb2 https://github.com/facebook/rocksdb
protobuf https://github.com/Tencent/paxosstore/blob/master/paxoskv/CMakeLists.txt#L18 https://github.com/protocolbuffers/protobuf https://github.com/CMU-Perceptual-Computing-Lab/openpose/blob/master/CMakeLists.txt#L373
folly https://trello.com/c/mCQza0wM/27-use-folly NOTE: disable googletest. Dependencies: boost
Snappy, a fast compressor/decompressor. https://github.com/Tencent/paxosstore/blob/master/paxoskv/CMakeLists.txt#L24 https://github.com/google/snappy
abseil https://trello.com/c/xeTTnS0b/30-abseil-c-lib
JSON for Modern C++ https://github.com/nlohmann/json
NuDB https://github.com/vinniefalco/NuDB
Boost.System: for error codes (header only). https://github.com/Broekman/micro
spdlog: fast, header only, C++ logging library. https://github.com/Broekman/micro
receivedMessagesQ_ https://github.com/peterSweter/carSmashCpp/blob/master/networking/Session.cpp#L87
timeouts https://github.com/LeonineKing1199/foxy
coroutine? https://github.com/LeonineKing1199/foxy/blob/master/src/proxy.cpp#L176 https://habr.com/ru/post/348602/
ip spam https://github.com/zirconium-n/Tangerine/blob/master/Tangerine/sgk/general/Game.cpp#L25
IOD https://github.com/matt-42/iod
Use_the_Tools_Available! https://lefticus.gitbooks.io/cpp-best-practices/content/02-Use_the_Tools_Available.html
Astyle https://github.com/node-webrtc/node-webrtc/blob/develop/CMakeLists.txt#L447
Read https://blog.kitware.com/static-checks-with-cmake-cdash-iwyu-clang-tidy-lwyu-cpplint-and-cppcheck/
LOKI https://github.com/DrAlexx/rproto/blob/master/cmake/modules/FindLoki.cmake http://loki-lib.sourceforge.net/
Qwt https://github.com/DrAlexx/rproto/blob/master/cmake/modules/FindQwt.cmake
Qt https://github.com/DrAlexx/rproto/blob/master/q5_app/CMakeLists.txt#L9
Doxygen https://github.com/YuvalNirkin/face_swap/blob/master/CMakeLists.txt#L99
tests https://github.com/YuvalNirkin/face_swap/blob/master/CMakeLists.txt#L115
shared memory
xxHash - Extremely fast hash algorithm https://github.com/Cyan4973/xxHash
GSL: Guidelines Support Library https://github.com/Microsoft/GSL
Google Breakpad https://github.com/telegramdesktop/tdesktop#third-party
Google Crashpad
LZMA SDK https://github.com/jljusten/LZMA-SDK
OpenSSL https://github.com/krzyzanowskim/OpenSSL/blob/master/include-ios/openssl/rc4.h
.travis.yml https://github.com/CMU-Perceptual-Computing-Lab/openpose/blob/master/.travis.yml
https://github.com/lewissbaker/cppcoro
read https://github.com/actor-framework/actor-framework/wiki and https://actor-framework.readthedocs.io/en/latest/Introduction.html
look projects like https://github.com/search?l=C%2B%2B&p=2&q=game+server&type=Repositories kbengine? NoahGameFrame? Nakama? BigWorld?
microservices https://martinfowler.com/articles/microservices.html
Lyft's Envoy https://eng.lyft.com/announcing-envoy-c-l7-proxy-and-communication-bus-92520b6c8191 https://www.youtube.com/watch?v=RVZX4CwKhGE https://github.com/envoyproxy/envoy
Wangle for building services https://medium.com/swlh/starting-a-tech-startup-with-c-6b5d5856e6de
katran L4 balancing https://github.com/facebookincubator/katran
read https://www.gamedev.net/forums/topic/667655-networking-solutions-for-making-mmo/ & https://ru.stackoverflow.com/q/844707
Conan https://blog.conan.io/2018/06/11/Transparent-CMake-Integration.html https://blog.conan.io/2018/12/03/Using-Facebook-Folly-with-Conan.html
Continuous integration https://blog.conan.io/2018/04/25/Continuous-integration-for-C-C++embedded-devices-with-jenkins-docker-and-conan.html
libevent https://eax.me/libevent/
hot reload https://habr.com/ru/post/435260/ https://github.com/iboB/dynamix http://onqtam.com/programming/2017-09-02-simple-cpp-reflection-with-cmake/
RabbitMQ
TODO Switch to C++20 & Clang9+ https://medium.com/@wrongway4you/brief-article-on-c-modules-f58287a6c64
READ about reflection https://gracicot.github.io/reflection/2018/04/03/reflection-present.html
gRPC for server-server communication: Fast protobuf serialization, bi-directional stream, for use in communication between the client and the "broker" instance. https://github.com/jan-alexander/grpc-cpp-helloworld-cmake https://www.slideshare.net/Docker/building-microservices-with-g-rpc-dockercon-april-2017
Minikube Envoy (google for it!) https://piotrminkowski.wordpress.com/2018/04/13/service-mesh-with-istio-on-kubernetes-in-5-steps/ https://meteatamel.wordpress.com/2018/04/24/istio-101-with-minikube/
Envoy+GRPCWeb https://medium.com/google-cloud/grpc-over-browser-javascript-using-grpc-web-on-google-kubernetes-engine-ingress-740789b811e8 https://hackernoon.com/interface-grpc-with-web-using-grpc-web-and-envoy-possibly-the-best-way-forward-3ae9671af67
Управление микросервисами с помощью Kubernetes и Istio https://habr.com/ru/company/jugru/blog/423011/
What is a Service Mesh, and Do I Need One When Developing Microservices? https://www.datawire.io/envoyproxy/service-mesh/
Dedicated Game Servers in Kubernetes https://cloud.google.com/solutions/gaming/running-dedicated-game-servers-in-kubernetes-engine https://www.compoundtheory.com/scaling-dedicated-game-servers-with-kubernetes-part-1-containerising-and-deploying/
Agones: Scaling Multiplayer Dedicated Game Servers with Kubernetes https://www.youtube.com/watch?v=CLNpkjolxYA
kubernetes POSIX shared Memory
kubernetes shared Volume
Multi-Container Pod Design Patterns in Kubernetes https://matthewpalmer.net/kubernetes-app-developer/articles/multi-container-pod-design-patterns.html
https://github.com/aantron/better-enums
https://github.com/electronicarts/EASTL https://rawgit.com/electronicarts/EASTL/master/doc/EASTL%20Modules.html
https://github.com/savoirfairelinux/opendht/wiki/API-Overview https://habr.com/ru/post/325528/
CPACK https://gitlab.com/cppit/jucipp/blob/master/CMakeLists.txt

NOTE: Istio has plans to support additional protocols such as AMQP in the future but for now, the idea of moving from a message based approach to an HTTP centric approach with Istio seems a bit premature. https://www.linkedin.com/pulse/kubernetes-exploring-istio-event-driven-architectures-todd-kaplinger

Protocol Buffers is indeed relatively similar to FlatBuffers, with the primary difference being that FlatBuffers does not need a parsing/ unpacking step to a secondary representation before you can access data, often coupled with per-object memory allocation. The code is an order of magnitude bigger, too. Protocol Buffers has neither optional text import/export nor schema language features like unions.

https://github.com/smfrpc/smf https://www.youtube.com/watch?v=WdFYY3vEcxo
seastar http://www.romange.com/2018/07/12/seastar---asynchronous-c---framework/ https://www.scylladb.com/2018/01/04/seastar-futures/

RESEARCH
gRPC and rabbitmq in microservices? https://dev.to/hypedvibe_7/what-is-the-purpose-of-using-grpc-and-rabbitmq-in-microservices-c4i https://middlewareblog.redhat.com/2018/10/09/reactive-microservices-clustering-messaging-or-service-mesh-a-comparison/
GitOps for Istio https://www.youtube.com/watch?v=VkKMf23ZokY

Caching
https://medium.com/datadriveninvestor/all-things-caching-use-cases-benefits-strategies-choosing-a-caching-technology-exploring-fa6c1f2e93aa

LEARN!!!
etcd+Istio+Deploy Node.js Application to Kubernetes https://medium.com/ibm-cloud/istio-is-not-just-for-microservices-4ed199322bf4 + https://www.youtube.com/watch?v=Nc8jx8oLzss
https://www.youtube.com/watch?v=ZpbXSdzp_vo + https://burrsutter.com/wp-content/uploads/2018/04/BS_022118_DN_8StepsToAwesomeWithKubernetes.pdf
https://htmlpreview.github.io/?https://github.com/redhat-developer-demos/docker-java/blob/devnexus2017/readme.html
http://kubernetesbyexample.com/
istio Concepts https://istio.io/docs/concepts/

DEVOPS BOOKS
?DevOps with Kubernetes https://b-ok.org/book/3428297/120263
?Microservices in Action https://b-ok.org/book/3603729/362a45
>>> Istio+Envoy https://www.oreilly.com/library/view/cloud-native-devops/9781492040750/
>>> https://www.manning.com/books/istio-in-action unlock so you can read each liveBook for a total of 5 minutes per day.  https://livebook.manning.com/#!/book/istio-in-action/chapter-3/v-2/171
?Cloud native programming with Golang
?Pro Devops with Google Cloud Platform https://b-ok.org/book/3611011/bba12f

MISC
https://habr.com/ru/post/430954/ https://wiki.qt.io/Qt_for_WebAssembly NOTE: download size
